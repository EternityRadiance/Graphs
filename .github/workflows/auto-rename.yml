name: Auto Rename Files

on:
  push:
    paths:
      - 'input/**'
  pull_request:
    types: [closed]
    paths:
      - 'input/**'
  workflow_dispatch:

jobs:
  process-files:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Process and rename files
      run: |
        node << 'EOF'
        const fs = require('fs');
        const path = require('path');
        
        console.log('=== –û–ë–†–ê–ë–û–¢–ö–ê –§–ê–ô–õ–û–í –ò–ó –ü–ê–ü–ö–ò INPUT ===');
        
        // –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã –∏–∑ input
        const inputFiles = fs.readdirSync('input')
          .filter(f => f !== '.gitkeep' && f !== '.gitignore');
        console.log('üì• –§–∞–π–ª—ã –≤ input:', inputFiles);
        
        const jsonFiles = inputFiles.filter(f => f.endsWith('.json'));
        console.log('üìÑ JSON —Ñ–∞–π–ª—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:', jsonFiles);
        
        if (jsonFiles.length === 0) {
          console.log('‚úÖ –ù–µ—Ç –Ω–æ–≤—ã—Ö JSON —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏');
          process.exit(0);
        }
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –≤ data
        let dataFiles = [];
        try {
          dataFiles = fs.readdirSync('data');
        } catch (error) {
          console.log('üìÅ –ü–∞–ø–∫–∞ data –ø—É—Å—Ç–∞');
        }
        
        // –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä
        let maxNum = 0;
        dataFiles.forEach(file => {
          const match = file.match(/^graph_(\d+)\.json$/);
          if (match) {
            const num = parseInt(match[1]);
            if (num > maxNum) maxNum = num;
          }
        });
        
        console.log('üî¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä:', maxNum);
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
        jsonFiles.forEach(file => {
          try {
            const inputPath = path.join('input', file);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º JSON
            const content = fs.readFileSync(inputPath, 'utf8');
            JSON.parse(content);
            
            // –ù–∞—Ö–æ–¥–∏–º —Å–≤–æ–±–æ–¥–Ω–æ–µ –∏–º—è
            maxNum++;
            const newName = `graph_${maxNum}.json`;
            const outputPath = path.join('data', newName);
            
            // –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Ñ–∞–π–ª
            fs.renameSync(inputPath, outputPath);
            console.log(`‚úÖ –ü–µ—Ä–µ–º–µ—â–µ–Ω: ${file} -> ${newName}`);
            
          } catch (error) {
            console.log(`‚ùå –û—à–∏–±–∫–∞: ${file} - ${error.message}`);
          }
        });
        
        // –û—á–∏—â–∞–µ–º input –æ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ñ–∞–π–ª–æ–≤
        const remainingFiles = fs.readdirSync('input')
          .filter(f => f !== '.gitkeep' && f !== '.gitignore');
          
        if (remainingFiles.length > 0) {
          console.log('üóëÔ∏è –û—á–∏—â–∞–µ–º input –æ—Ç –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è —Ñ–∞–π–ª–æ–≤:', remainingFiles);
          remainingFiles.forEach(file => {
            fs.unlinkSync(path.join('input', file));
          });
        }
        
        console.log('üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        EOF
        
    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m "Auto-process: –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏–∑ input" || echo "–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
        git push
